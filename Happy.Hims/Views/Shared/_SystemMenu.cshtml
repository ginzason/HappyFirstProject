@{
    List<Happy.Models.UserMenu> menuList = new List<Happy.Models.UserMenu>();
    menuList = ViewBag.userMenuList;
}

<nav class="navbar navbar-inverse navbar-fixed-top" role="navigation">
    <div class="container-fluid">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand" href="#">Mis SYSTEM ADMIN</a>
        </div>
        <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
            <ul class="nav navbar-nav">
                @if (menuList != null)
                {
                    foreach (var menuTop in menuList.Where(x => x.parent_idx == 0).OrderBy(x => x.sort_order))
                    {
                        <li class="dropdown">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown">@menuTop.menu_name <span class="caret"></span></a>
                            <ul class="dropdown-menu" role="menu">
                                @foreach (var menuBottom in menuList.Where(x => x.parent_idx == menuTop.menu_idx).OrderBy(x => x.sort_order))
                                 {
                                    <li><a href="@menuBottom.menu_url">@menuBottom.menu_name</a></li>
                                 }
                            </ul>
                        </li>
                    }
                }
            </ul>
            <ul class="nav navbar-nav navbar-right">
                <li><a href="#" onclick="Master.GotoPad();">Pad</a></li>
                <li><a href="@Url.Action("Logout","User")">LogOut</a></li>
            </ul>
        </div>
    </div>
</nav>
