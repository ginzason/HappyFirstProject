@model List<Happy.Mis.Models.AuthMenu> 
@{
    Layout = "~/Views/Shared/_SystemLayout.cshtml";
}

<div class="row">
    <div class="col-xs-6 col-md-4">
        <div class=".col-xs-12">
            <h3>권한</h3>
        </div>
        <div class=".col-xs-12" style="margin-bottom:10px; text-align:right;">
            <button type="button" class="btn btn-info"   id="btnEditOpen"><span class="glyphicon glyphicon-wrench"></span> 수정</button>
            <button type="button" class="btn btn-primary" id="btnAdd"><span class="glyphicon glyphicon-pencil"></span> 추가</button>
        </div>
        <div class=".col-xs-12">
            <table class="table table-bordered" id="tbAuth" style="width:100%;">
                <tr>
                    <th style="text-align: center; width:20%;">권한아이디</th>
                    <th style="text-align: center; width: 80%;">권한명</th>
                </tr>
            </table>
            <input type="hidden" id="txtAuId" />
            <input type="hidden" id="txtAuName" />
        </div>
    </div>
    <div class="col-xs-1 col-sm-1 col-md-1"></div>
    <div class="col-xs-11 col-sm-5 col-md-7">
        <div class="row">
            <div class=".col-xs-12">
                <h3>메뉴</h3>
            </div>
            <div class=".col-xs-12" style="margin-bottom:10px; text-align:right;">
                <button type="button" class="btn btn-primary" id="btnMenuSave"><span class="glyphicon glyphicon-pencil"></span> 저장</button>
            </div>
            <div class=".col-xs-12">
                <table class="table table-bordered" style="width:100%;" id="tbMenu">
                    <tr>
                        <th style="text-align:center; width:10px;">
                            <input type="checkbox" id="ckAll" />
                        </th>
                        <th style="text-align: center;">메뉴ID</th>
                        <th style="text-align: center;">메뉴명</th>
                        <th style="text-align: center;">URL</th>
                    </tr>
                    @if (Model != null)
                    {
                        foreach (var menuTop in Model.Where(x => x.parent_idx == 0).OrderBy(x => x.sort_order))
                        {
                            <tr class="warning">
                                <td style="text-align:center;">
                                    <input type="checkbox" name="ckTr" value="@menuTop.menu_idx" />
                                </td>
                                <td>@menuTop.menu_idx</td>
                                <td>@menuTop.menu_name</td>
                                <td>@menuTop.menu_url</td>
                            </tr>
                            foreach (var menuBottom in Model.Where(x => x.parent_idx == menuTop.menu_idx).OrderBy(x => x.sort_order))
                            {
                                <tr>
                                    <td style="text-align:center;">
                                        <input type="checkbox" name="ckTr" value="@menuBottom.menu_idx" />
                                    </td>
                                    <td>&nbsp;&nbsp;&nbsp;&nbsp; @menuBottom.menu_idx</td>
                                    <td>&nbsp;&nbsp;&nbsp;&nbsp; @menuBottom.menu_name</td>
                                    <td>&nbsp;&nbsp;&nbsp;&nbsp; @menuBottom.menu_url</td>
                                </tr>
                            }
                        }
                    }
                </table>
            </div>
    </div>
    </div>
</div>

<div class="modal fade bs-example-modal-lg" id="editModal" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-disMiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                <h4 id="mtitle" class="modal-title">권한생성</h4>
            </div>
            <div class="modal-body">
                <form role="form">
                    <div class="form-group">
                        <label for="txtName">권한명</label>
                        <input type="text" class="form-control" id="txtName" placeholder="권한명">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-danger" id="btnDelete"><span class="glyphicon glyphicon-trash"></span> Delete</button>
                <button type="button" class="btn btn-primary" id="btnSave"><span class="glyphicon glyphicon-pencil"></span> Save</button>
                <button type="button" class="btn btn-default" data-disMiss="modal"><span class="glyphicon glyphicon-remove"></span> Close</button>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script type="text/javascript">
        $(function () {
            Page.AuthMasterLoad();
            $("#btnAdd").click(function () {
                Page.AuthMasterAdd();
            });
            $("#btnSave").click(function () {
                Page.AuthMasterInsert();
            });
            $("#btnEditOpen").click(function () {
                Page.AuthEditOpen();
            });
            $("#btnDelete").click(function () {
                Page.AuthMasterDelete();
            });
            $("#btnMenuSave").click(function () {
                Page.AuthMenuSave();
            });
            $("#ckAll").click(function () {
                Page.CheckAll();
            });
        });
        var Page = {
            AuthMasterLoad: function () {
                var data = Utill.Ajax("@Url.Action("AuthMasterList")");
                var json = $.parseJSON(data);
                var html = '';
                var trList = $("#tbAuth > tbody > tr");
                if (trList.length > 0) {
                    trList.each(function (index, element) {
                        if (index > 0) {
                            $(this).remove();
                        }
                    });
                }
                $.each(json, function (key, value) {
                    html += "<tr style='cursor:pointer;' onclick=\"Page.AuthClick('" + value.AU_IDX + "','" + value.AU_NAME + "');\">";
                    html += "<td style='text-align:center;'>" + value.AU_IDX + "</td>";
                    html += "<td style='text-align:center;'>" + value.AU_NAME + "</td>";
                    html += "</tr>";
                });
                $("#tbAuth").append(html);
            },
            AuthClick: function (au_id, name) {
                $("#txtAuId").val(au_id);
                $("#txtAuName").val(name);
                $("#tbAuth > tbody > tr").removeClass("info");
                $("#tbAuth > tbody > tr").each(function () {
                    var sauId = $(this).children("td").eq(0).text().trim();
                    if (sauId == au_id) {
                        $(this).addClass("info");
                    }
                });
            },
            AuthMasterAdd: function () {
                $("#txtAuId").val("");
                $("#txtName").val("");
                $("#tbAuth > tbody > tr").removeClass("info");
                $('#editModal').modal();
            },
            AuthMasterInsert: function () {
                var name = $("#txtName").val();
                var data = Utill.Ajax("@Url.Action("AuthMasterSave")", { name: name });
                if (data > 0) {
                    Page.AuthMasterLoad();
                    $("#editModal").modal('hide');
                }
                else {
                    Utill.Alert("저장 실패", "E");
                }
            },
            AuthEditOpen: function () {
                if (Utill.Nullcheck("txtAuId", "선택하세요")) {
                    $("#txtName").val($("#txtAuName").val());
                    $('#editModal').modal();
                }
            },
            AuthMasterDelete: function () {
                var data = Utill.Ajax("@Url.Action("AuthMasterDelete")", { au_idx: $("#txtAuId").val() });
                if (data > 0) {
                    Page.AuthMasterLoad();
                    $("#editModal").modal('hide');
                }
                else {
                    Utill.Alert("삭제 실패", "E");
                }
            },
            AuthMenuSave: function () {
                var menuId = "";
                $("#tbMenu > tbody > tr").each(function () {
                    var checkSelector = $(this).children("td").eq(0).children("[name='ckTr']:checked");
                    if (checkSelector.length > 0) {
                        menuId += menuId == "" ? checkSelector.val() : "," + checkSelector.val();
                    }
                });
                var data = Utill.Ajax("@Url.Action("AuthMenuInsert")", { au_idx: $("#txtAuId").val(), menu_idx: menuId });
                if (data > 0) {
                    Utill.Alert("저장 성공", "S");
                }
                else {
                    Utill.Alert("저장 실패", "E");
                }
            },
            CheckAll: function () {
                var isChecked = $("#ckAll:checked").length > 0 ? true : false;
                if (isChecked) {
                    $("input:checkbox").prop("checked", true);
                }
                else {
                    $("input:checkbox").prop("checked", false);
                    //$("input:checkbox").removeAttr("checked");
                }
            }
        }
    </script>
  }
